@using WorkflowWeb.ViewModels
@model IEnumerable<TIMS_WorkflowActionViewModel>
@{
    var controller = ViewContext.RouteData.Values["controller"].ToString();

    var ui_html_target = (ViewContext.RouteData.Values["ui_html_target"] ?? Request.QueryString["ui_html_target"]) as string;
    var ui_list_view = System.IO.Path.GetFileNameWithoutExtension(((RazorView)ViewContext.View).ViewPath);
    var ui_modal_id = Guid.NewGuid().ToString();
    var ui_tab_id = (ViewContext.RouteData.Values["ui_tab_id"] ?? Request.QueryString["ui_tab_id"]) as string;
    var ui_route_filter = (ViewContext.RouteData.Values["ui_route_filter"] ?? Request.QueryString["ui_route_filter"]) as string;

    var currentId = ViewBag.CurrentID as object;
    var currentItem = currentId == null ? Model.FirstOrDefault() : Model.FirstOrDefault(x => x.ID.ToString() == currentId.ToString());
}

<div>
    <div class="row">
        <div class="col-md-4">
            <h3>Workflow Actions</h3>
            <div class="text-right mb-5">
                @Ajax.ActionLink(
                linkText: "Add New Workflow Action..",
                actionName: "New",
                controllerName: controller,
                routeValues: new { ui_html_target, ui_list_view, ui_modal_id, ui_tab_id, ui_route_filter },
                ajaxOptions: new AjaxOptions
                {
                    HttpMethod = "GET",
                    OnBegin = "show_modal('" + ui_modal_id + "')",
                    OnSuccess = "",
                    Confirm = null,
                    AllowCache = false,
                    InsertionMode = InsertionMode.Replace,
                    OnFailure = "show_error",
                    OnComplete = "modal_loading(false)",
                    UpdateTargetId = ui_modal_id + "_body"
                },
                htmlAttributes: new
                {
                    @class = "btn btn-outline-primary btn-sm"
                })
            </div>
            <div class="list-group">
                @foreach (var item in Model)
                {
                    @*<a href="@Url.Action(actionName: "Index", controllerName: controller, routeValues: new { id = item.ID, ui_route_filter })" class="list-group-item list-group-item-action @(currentItem != null && currentItem.ID == item.ID ? "list-group-item-primary" : "")">@item.ID</a>*@

                    @Ajax.ActionLink(
                        linkText: item.ID.ToString(),
                        actionName: "List",
                        controllerName: controller,
                        routeValues: new { id = item.ID, ui_html_target, ui_list_view, ui_modal_id, ui_tab_id, ui_route_filter },
                        ajaxOptions: new AjaxOptions
                        {
                            HttpMethod = "GET",
                            OnBegin = "",
                            OnSuccess = "",
                            Confirm = null,
                            AllowCache = false,
                            InsertionMode = InsertionMode.Replace,
                            OnFailure = "show_error",
                            OnComplete = "modal_loading(false)",
                            UpdateTargetId = ui_html_target
                        },
                        htmlAttributes: new
                        {
                            @class = "list-group-item list-group-item-action" + (currentItem != null && currentItem.ID == item.ID ? " list-group-item-primary" : "")
                        })
                }
            </div>
        </div>
        <div class="col-md-8">
            @if (currentItem != null)
            {
                @Html.Action(actionName: "DetailsWithTabs", controllerName: controller, routeValues: new { id = currentItem.ID, ui_html_target, ui_modal_id, ui_list_view, ui_route_filter })
            }
        </div>
    </div>
</div>