<script id="formUploadComponent" type="text/template">
    <div class="form-group row">
        <label class="col-form-label col-sm-2">{{label}}</label>
        <div class="col-sm-10">
            <input :id="id" type="file" />  
            <div class="progress">
                <div class="progress-bar progress-bar-success" :style="{ width: progress + '%' }"> {{ progress }}%</div>
            </div>
            <div>
                <button class="btn btn-primary" v-on:click="upload">Upload file</button>
            </div>            
        </div>
    </div>
</script>

<script>

    Vue.component("v-form-upload", {

        props: ['label', 'id', 'url'],
        data: function () {
            return {
                progress: 0,
                token: $('@Html.AntiForgeryToken()').val()
            };
        },
        mounted: function () {

        },
        methods:
        {
            upload: function () {
                var file = $('#' + this.id)[0].files[0];
                var chunkSize = 256 * 1024; //256KB
                var chunks = Math.ceil(file.size / chunkSize, chunkSize);
                this.uploadSlice(this.url, file, chunkSize, 0, chunks);
            },
            uploadSlice: function (url, file, chunkSize, chunk, chunks) {
                var vm = this;

                if (chunk <= chunks) {
                    var offset = chunk * chunkSize;

                    var fd = new FormData();
                    var content = file.slice(offset, offset + chunkSize)
                    fd.append("name", file.name);
                    fd.append("content", content);
                    fd.append("size", file.size);
                    fd.append("part", chunk);
                    fd.append("parts", chunks);
                    fd.append("__RequestVerificationToken", vm.token);

                    console.log("uploading part " + chunk + " of " + chunks);
                    $.ajax({
                        url: url,
                        type: 'POST',
                        data: fd,
                        dataType: 'json',
                        mimeType: 'multipart/form-data', // this too
                        contentType: false,
                        cache: false,
                        processData: false,
                        success: function (data, status, jqXHR) {
                            var progress = parseInt(chunk / chunks * 100, 10);
                            vm.progress = progress;
                            console.log("progress " + progress);

                            chunk++;
                            vm.uploadSlice(url, file, chunkSize, chunk, chunks);

                            // alert('Hooray! All is well.');
                            // console.log(data);
                            // console.log(status);
                            // console.log(jqXHR);

                        },
                        error: function (jqXHR, status, error) {
                            // Hopefully we should never reach here
                             console.log(jqXHR);
                             console.log(status);
                             console.log(error);
                        }
                    });
                }
                else {
                    this.complete(file);
                }
            },
            complete: function (file) {
                this.$emit('complete', file.name);
            }
        },
        template: "#formUploadComponent"
    });
</script>