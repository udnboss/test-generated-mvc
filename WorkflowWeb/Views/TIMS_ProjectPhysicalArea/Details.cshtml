@using WorkflowWeb.ViewModels
@model TIMS_ProjectPhysicalAreaViewModel

@{
    var controller = ViewContext.RouteData.Values["controller"].ToString();

    var ui_html_target = (ViewContext.RouteData.Values["ui_html_target"] ?? Request.QueryString["ui_html_target"]) as string;
    var ui_list_view = (ViewContext.RouteData.Values["ui_list_view"] ?? Request.QueryString["ui_list_view"]) as string;
    var ui_modal_id = (ViewContext.RouteData.Values["ui_modal_id"] ?? Request.QueryString["ui_modal_id"]) as string;
    var ui_tab_id = (ViewContext.RouteData.Values["ui_tab_id"] ?? Request.QueryString["ui_tab_id"]) as string;
    var ui_route_filter = (ViewContext.RouteData.Values["ui_route_filter"] ?? Request.QueryString["ui_route_filter"]) as string;

    var ui_form_id = Guid.NewGuid().ToString();
}

<div>
    <h4>@Model.Name</h4>
    <hr />
    <div class="text-right">
        @Ajax.ActionLink(
    linkText: "Edit",
    actionName: "Edit",
    controllerName: controller,
    routeValues: new { id = Model.ID, ui_html_target, ui_list_view, ui_modal_id, ui_tab_id, ui_route_filter },
    ajaxOptions: new AjaxOptions
    {
        HttpMethod = "GET",
        OnBegin = "modal_loading(true);" + "show_modal('" + ui_modal_id + "');",
        OnSuccess = "",
        Confirm = null,
        AllowCache = false,
        InsertionMode = InsertionMode.Replace,
        OnFailure = "show_error",
        OnComplete = "modal_loading(false)",
        UpdateTargetId = ui_modal_id + "_body"
    },
    htmlAttributes: new
    {
        @class = "btn btn-primary btn-sm"
    })

        @using (Ajax.BeginForm(
            actionName: "Delete",
            controllerName: controller,
            routeValues: new { id = Model.ID, ui_html_target, ui_list_view, ui_modal_id, ui_tab_id, ui_route_filter },
            ajaxOptions: new AjaxOptions
            {
                HttpMethod = "POST",
                OnBegin = "modal_loading(true)",
                OnSuccess = "hide_modal(this)",
                Confirm = null,
                AllowCache = false,
                InsertionMode = InsertionMode.Replace,
                OnFailure = "show_error",
                OnComplete = "modal_loading(false)",
                UpdateTargetId = ui_html_target
            },
            htmlAttributes: new
            {
                @class = "d-inline form-inline",
                id = ui_form_id
            }))
        {
            @Html.AntiForgeryToken()
            <button type="submit" class="btn btn-outline-danger btn-sm" onclick="return confirm('Confirm delete?')">Delete</button>
        }
    </div>
    <div>
        <div class="form-group row">
		    @Html.LabelFor(model => model.ID, htmlAttributes: new { @class = "control-label col-md-2" })
		    <div class="col-md-10">
		        @Html.DisplayFor(model => model.ID)
		    </div>
		</div>

		<div class="form-group row">
		    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
		    <div class="col-md-10">
		        @Html.DisplayFor(model => model.Name)
		    </div>
		</div>

		<div class="form-group row">
		    @Html.LabelFor(model => model.ProjectID, htmlAttributes: new { @class = "control-label col-md-2" })
		    <div class="col-md-10">
		        @Html.DisplayFor(model => model.TIMS_Project.Name)
		    </div>
		</div>
    </div>
</div>
