@using WorkflowWeb.ViewModels
@using WorkflowWeb.Models
@model IEnumerable<TIMS_UserWatchlistItemViewModel>
    @{
        var controller = ViewContext.RouteData.Values["controller"].ToString();

        var ui_html_target = (ViewContext.RouteData.Values["ui_html_target"] ?? Request.QueryString["ui_html_target"]) as string;
        var ui_list_view = (ViewContext.RouteData.Values["ui_list_view"] ?? Request.QueryString["ui_list_view"]) as string;
        var ui_modal_id = Guid.NewGuid().ToString();
        var ui_tab_id = (ViewContext.RouteData.Values["ui_tab_id"] ?? Request.QueryString["ui_tab_id"]) as string;
        var ui_route_filter = (ViewContext.RouteData.Values["ui_route_filter"] ?? Request.QueryString["ui_route_filter"]) as string;

        var ui_form_id = Guid.NewGuid().ToString();

        var modalId = Guid.NewGuid().ToString();

        var currentId = ViewBag.CurrentID as object;
        var currentItem = currentId == null ? Model.FirstOrDefault() : Model.FirstOrDefault(x => x.ID.ToString() == currentId.ToString());
        var currentRouteFilter = ViewBag.RouteFilter as TIMS_UserWatchlistItem;
    }

    <div>
        <h3>User Watchlist Items</h3>
        <div class="text-right mb-2">
            @Ajax.ActionLink(
            linkText: "Add New User Watchlist Item..",
            actionName: "New",
            controllerName: controller,
            routeValues: new { ui_html_target, ui_list_view, ui_modal_id, ui_tab_id, ui_route_filter },
            ajaxOptions: new AjaxOptions
            {
                HttpMethod = "GET",
                OnBegin = "show_modal('" + ui_modal_id + "')",
                OnSuccess = "",
                Confirm = null,
                AllowCache = false,
                InsertionMode = InsertionMode.Replace,
                OnFailure = "show_error",
                OnComplete = "modal_loading(false)",
                UpdateTargetId = ui_modal_id + "_body"
            },
            htmlAttributes: new
            {
                @class = "btn btn-outline-primary btn-sm"
            })
        </div>

        <div class="table-responsive">
            <table class="table">
                <thead>
                    <tr>
                        <th>
                            View
                        </th>
                        @if (currentRouteFilter.UserID == null) { <th>@Html.DisplayNameFor(m => m.UserID)</th> }
						@if (currentRouteFilter.ProjectInterfacePointID == null) { <th>@Html.DisplayNameFor(m => m.ProjectInterfacePointID)</th> }
						@if (currentRouteFilter.ProjectInterfaceAgreementID == null) { <th>@Html.DisplayNameFor(m => m.ProjectInterfaceAgreementID)</th> }
						@if (currentRouteFilter.ProjectActionItemID == null) { <th>@Html.DisplayNameFor(m => m.ProjectActionItemID)</th> }
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr class="@(currentItem != null && item.ID == currentItem.ID ? "table-warning" : "")">
                            <td>
                                @Ajax.ActionLink(
                                    linkText: "View",
                                    actionName: "Details",
                                    controllerName: controller,
                                    routeValues: new { id = item.ID, ui_html_target, ui_list_view, ui_modal_id, ui_tab_id, ui_route_filter },
                                    ajaxOptions: new AjaxOptions
                                    {
                                        HttpMethod = "GET",
                                        OnBegin = "show_modal('" + ui_modal_id + "')",
                                        OnSuccess = "",
                                        Confirm = null,
                                        AllowCache = false,
                                        InsertionMode = InsertionMode.Replace,
                                        OnFailure = "show_error",
                                        OnComplete = "modal_loading(false)",
                                        UpdateTargetId = ui_modal_id + "_body"
                                    },
                                    htmlAttributes: new
                                    {
                                        @class = "btn btn-outline-primary btn-sm"
                                    })
                            </td>
                            @if (currentRouteFilter.UserID == null) { <td>@Html.DisplayFor(modelItem => item.TIMS_User.Name)</td> }
						@if (currentRouteFilter.ProjectInterfacePointID == null) { <td>@Html.DisplayFor(modelItem => item.TIMS_ProjectInterfacePoint.ID)</td> }
						@if (currentRouteFilter.ProjectInterfaceAgreementID == null) { <td>@Html.DisplayFor(modelItem => item.TIMS_ProjectInterfaceAgreement.Name)</td> }
						@if (currentRouteFilter.ProjectActionItemID == null) { <td>@Html.DisplayFor(modelItem => item.TIMS_ProjectActionItem.Name)</td> }
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
