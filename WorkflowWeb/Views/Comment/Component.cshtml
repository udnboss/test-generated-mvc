<script type="text/template" id="commentsComponent">
    <div>
        <div class="text-right">
            <button v-on:click="refresh()" class="btn btn-outline-primary"><i class="fas fa-refresh"></i> Refresh</button>
            <button v-on:click="createNew()" class="btn btn-outline-success"><i class="fas fa-plus-circle"></i> New</button>
        </div>

        <table class="table">
            <thead>
                <tr>
                    <th></th>
                    <th>Name</th>
                    <th>Domain</th>
                    <th>Comment</th>
                    <th>Date Posted</th>                    
                </tr>
            </thead>
            <tbody>
                <tr v-for="x in objects">
                    <td><button v-on:click="details(x)" class="btn btn-primary">View</button></td>
                    <td>{{ x.Name }}</td>
                    <td>{{ x.T_Domain.Name }}</td>
                    <td>{{ x.Comment }}</td>
                    <td>{{ x.DatePosted }}</td>                    
                </tr>
            </tbody>            
        </table>

        <v-modal v-if="detailsModal" v-on:close="detailsModal = false" v-bind:comment="selectedObject">
            <dl>
                <dt>Name</dt>
                <dd>{{ selectedObject.Name }}</dd>
                <dt>Domain</dt>
                <dd>{{ selectedObject.DomainID }}</dd>
                <dt>Comment</dt>
                <dd>{{ selectedObject.Comment }}</dd>
                <dt>Date Posted</dt>
                <dd>{{ selectedObject.DatePosted }}</dd>
            </dl>
            <button v-on:click="edit(selectedObject)" class="btn btn-outline-success"><i class="fas fa-pencil"></i> Edit</button>
            <button v-on:click="del(selectedObject)" class="btn btn-outline-danger"><i class="fas fa-trash"></i> Delete</button>
        </v-modal>

        <v-modal v-if="editModal" v-on:close="editModal = false" v-bind:comment="editObject">
            <form v-on:submit.prevent="update(editObject)">
                <v-form-input label="UserName" v-model="editObject.Name"></v-form-input>
                <v-form-input label="Comment" v-model="editObject.Comment"></v-form-input>
                <v-select2 label="Domain" :options="lookups.domain_id" v-model="editObject.DomainID">
                    <option disabled value="0">Select one</option>
                </v-select2>
                <button class="btn btn-success"><i class="fas fa-save"></i> Update</button>                
            </form>
        </v-modal>

        <v-modal v-if="newModal" v-on:close="newModal = false" v-bind:comment="createObject">
            <form v-on:submit.prevent="create(createObject)">
                <v-form-input label="UserName" v-model="createObject.Name"></v-form-input>
                <v-form-input label="Comment" v-model="createObject.Comment"></v-form-input>
                <v-select2 label="Domain" :options="lookups.domain_id" v-model="createObject.DomainID">
                    <option disabled value="0">Select one</option>
                </v-select2>
                <button class="btn btn-success"><i class="fas fa-save"></i> Create</button>
            </form>
        </v-modal>

        <v-modal v-if="deleteModal" v-on:close="deleteModal = false" v-bind:comment="selectedObject">
            <dl>
                <dt>Name</dt>
                <dd>{{ selectedObject.Name }}</dd>
                <dt>Domain</dt>
                <dd>{{ selectedObject.DomainID }}</dd>
                <dt>Comment</dt>
                <dd>{{ selectedObject.Comment }}</dd>
                <dt>Date Posted</dt>
                <dd>{{ selectedObject.DatePosted }}</dd>
            </dl>
            <form v-on:submit.prevent="deleteConfirmed(selectedObject)">
                <button class="btn btn-danger"><i class="fas fa-trash"></i> Delete</button>
            </form>
        </v-modal>
    </div>
</script>

<script>
    //see this for a complete crud example...
    //https://www.ma-no.org/en/programming/javascript/crud-operations-using-vue-js-a-basic-example


    Vue.component("v-comments", {
        template: "#commentsComponent",
        data: function () {
            return {
                lookups: {},
                objects: [],
                selectedObject: {},
                editObject: {},
                createObject: {},
                detailsModal: false,
                editModal: false,
                newModal: false,
                deleteModal: false,
                token: $('@Html.AntiForgeryToken()').val()
            }
        },
       mounted: function () {
           var app = this;
            $.get('@Url.Action("List", "Comment", new { json = true })', function (response) {
                app.objects = response;
                selectedObject = app.objects[0];
                createObject = app.objects[0];
                detailsModal = app.objects[0];
                });
        },
       methods: {
           getIndex: function (o) {
               var app = this;
                var i = app.objects.map(function (elem) {
                    return elem.ID;
                }).indexOf(o.ID);
                return i;
            },
            refresh: function () {
                var app = this;
                $.get('@Url.Action("List", "Comment", new { json = true })', function (response) {
                    app.objects = response;
                }).fail(function (xhr, status, error) { console.Log(status); });
            },
            details: function (o) {
                var app = this;
                $.get('@Url.Action("Details", "Comment", new { json = true })', { id: o.ID }, function (response) {
                    var i = app.getIndex(o);
                    console.log(i);
                    app.objects[i] = response;
                    app.selectedObject = app.objects[i];
                    app.hideModals();
                    app.detailsModal = true;
                }).fail(function (xhr, status, error) { console.Log(status); });
            },
            edit: function (o) {
                var app = this;
                $.get('@Url.Action("Edit", "Comment", new { json = true })', { id: o.ID }, function (response) {
                    var i = app.getIndex(o);
                    app.objects[i] = response.data;
                    app.lookups = response.lookups;
                    app.selectedObject = app.objects[i];
                    var editObj = JSON.parse(JSON.stringify(app.selectedObject));
                    app.editObject = editObj;
                    app.hideModals();
                    app.editModal = true;
                }).fail(function (xhr, status, error) { console.Log(status); });
            },
            createNew: function () {
                var app = this;
                $.get('@Url.Action("New", "Comment", new { json = true })', function (response) {
                    app.createObject = response.data;
                    app.lookups = response.lookups;
                    app.hideModals();
                    app.newModal = true;
                }).fail(function (xhr, status, error) { console.Log(status); });
            },
            del: function (o) {
                var app = this;
                app.selectedObject = o;
                app.hideModals();
                app.deleteModal = true;
            },
            create: function (o) {
                var app = this;
                o["__RequestVerificationToken"] = app.token;
                $.post('@Url.Action("Create", "Comment", new { json = true })', o, function (response) {
                    app.objects = response;
                    app.selectedObject = o;
                    app.hideModals();
                }).fail(function (xhr, status, error) { console.Log(status); });
            },
            update: function (o) {
                var app = this;
                o["__RequestVerificationToken"] = app.token;
                delete o["T_Comment1"];

                $.post('@Url.Action("Update", "Comment", new { json = true })', o, function (response) {
                    app.objects = response;
                    app.selectedObject = o;
                    app.hideModals();
                }).fail(function (xhr, status, error) { console.Log(status); });
            },
            deleteConfirmed: function (o) {
                var app = this;
                o["__RequestVerificationToken"] = app.token;
                $.post('@Url.Action("Delete", "Comment", new { json = true })', o, function (response) {
                    app.objects = response;
                    app.selectedObject = o;
                    app.hideModals();
                }).fail(function (xhr, status, error) { console.Log(status); });
            },
            hideModals: function () {
                var app = this;
                app.detailsModal = false;
                app.editModal = false;
                app.newModal = false;
                app.deleteModal = false;
            }
        }
    });

</script>