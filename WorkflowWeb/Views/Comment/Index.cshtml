<div id="@(Model)App">
    <div class="text-right">
        <button v-on:click="refresh()" class="btn btn-primary">Refresh</button>
        <button v-on:click="createNew()" class="btn btn-primary">New..</button>
    </div>
    <table class="table">
        <tr v-for="c in objects">
            <td>{{ c.Name }}</td>
            <td>{{ c.Comment }}</td>
            <td>{{ c.DatePosted }}</td>
            <td><button v-on:click="details(c)" class="btn btn-primary">View</button></td>
            <td><button v-on:click="edit(c)" class="btn btn-success">Edit</button></td>
            <td><button v-on:click="del(c)" class="btn btn-danger">Delete</button></td>
        </tr>
    </table>

    <v-modal v-if="detailsModal" v-on:close="detailsModal = false" name="Umesh" v-bind:comment="selectedObject">
        <p>{{ selectedObject.Comment }}</p>
    </v-modal>

    <v-modal v-if="editModal" v-on:close="editModal = false" name="Umesh" v-bind:comment="editObject">
        <form v-on:submit.prevent="update(editObject)">
            <v-form-input v-for="(value, name, index) in editObject" v-bind:key="name" v-bind:label="name" v-model="editObject[name]"></v-form-input>
            @*<v-form-input label="UserName" v-model="editObject.Name"></v-form-input>
                <v-form-input label="Comment" v-model="editObject.Comment"></v-form-input>*@
            <button>Update</button>
            <p>{{ editObject }}</p>
        </form>
    </v-modal>

    <v-modal v-if="newModal" v-on:close="newModal = false" name="Umesh" v-bind:comment="createObject">
        <form v-on:submit.prevent="create(createObject)">
            <v-form-input label="UserName" v-model="createObject.Name"></v-form-input>
            <v-form-input label="Comment" v-model="createObject.Comment"></v-form-input>
            <button>Create</button>
            <p>{{ createObject }}</p>
        </form>
    </v-modal>

    <v-modal v-if="deleteModal" v-on:close="deleteModal = false" name="Umesh" v-bind:comment="selectedObject">
        <p>{{ selectedObject.Comment }}</p>
        <form v-on:submit.prevent="deleteConfirmed(selectedObject)">
            <button>Delete</button>
        </form>
    </v-modal>

</div>
<script type="text/javascript">
    //see this for a complete crud example...
    //https://www.ma-no.org/en/programming/javascript/crud-operations-using-vue-js-a-basic-example

    Vue.component("v-form-input", {
        props: ['label', 'value'],
        methods: {
            onInput: function (event) {
                this.$emit('input', event.target.value)
            }
        },
        template: `
        <div class="form-group row">
            <label class="col-form-label col-sm-2">{{label}}</label>
            <div class="col-sm-10">
                <input type="text" class="form-control" v-bind:value="value" v-on:keyup="onInput" />
            </div>
        </div>
        `
    });

    Vue.component("v-modal", {
        props: ['name', 'comment'],
        template: `
		<div class="modal fade in modal-active">
			<div class="modal-dialog">
					<div class="modal-content">
						<div class="modal-header">
							<button type="button" v-on:click="$emit('close')" class="close"><span >&times;</span></button>
							<h4 class="modal-title">
								{{name}}
							</h4>
						</div>
						<div class="modal-body">
							<slot></slot>
						</div>
						<div class="modal-footer">
							<button type="button" class="btn btn-default" v-on:click="$emit('close')">Close</button>
						</div>
				</div>
			</div>
		</div>`
    });




   var @(Model)App = new Vue({
       el: '#@(Model)App',
        data: {
            lookups: {},
            objects: [],
            selectedObject: {},
            editObject: {},
            createObject: {},
            detailsModal: false,
            editModal: false,
            newModal: false,
            deleteModal: false
        },
       mounted: function () {
           var app = this;
            $.get('@Url.Action("Index", "Comment")', function (response) {
                app.objects = response;
                selectedObject = app.objects[0];
                createObject = app.objects[0];
                detailsModal = app.objects[0];
                });
        },
       methods: {
           
           getIndex: function (o) {
               var app = this;
                var i = app.objects.map(function (elem) {
                    return elem.ID;
                }).indexOf(o.ID);
                return i;
            },
            refresh: function () {
                var app = this;
                $.get('@Url.Action("Index", "Comment")', function (response) {
                    app.objects = response;
                });
            },
            details: function (o) {
                var app = this;
                $.get('@Url.Action("Details", "Comment")', { id: o.ID }, function (response) {
                    var i = app.getIndex(o);
                    console.log(i);
                    app.objects[i] = response;
                    app.selectedObject = app.objects[i];
                    app.hideModals();
                    app.detailsModal = true;
                });
            },
            edit: function (o) {
                var app = this;
                $.get('@Url.Action("Edit", "Comment")', { id: o.ID }, function (response) {
                    var i = app.getIndex(o);
                    app.objects[i] = response.data;
                    app.lookups = response.lookups;
                    app.selectedObject = app.objects[i];
                    app.editObject = clone(app.selectedObject);
                    app.hideModals();
                    app.editModal = true;
                });
            },
            createNew: function () {
                var app = this;
                $.get('@Url.Action("New", "Comment")', function (response) {
                    app.createObject = response.data;
                    app.lookups = response.lookups;
                    app.hideModals();
                    app.newModal = true;
                });
            },
            del: function (o) {
                var app = this;
                app.selectedObject = o;
                app.hideModals();
                app.deleteModal = true;
            },
            create: function (o) {
                var app = this;
                o["__RequestVerificationToken"] = token;
                $.post('@Url.Action("Create", "Comment")', o, function (response) {
                    app.objects = response;
                    app.selectedObject = o;
                    app.hideModals();
                })
            },
            update: function (o) {
                var app = this;
                o["__RequestVerificationToken"] = token;
                delete o["T_Comment1"];

                $.post('@Url.Action("Update", "Comment")', o, function (response) {
                    app.objects = response;
                    app.selectedObject = o;
                    app.hideModals();
                })
            },
            deleteConfirmed: function (o) {
                var app = this;
                o["__RequestVerificationToken"] = token;
                $.post('@Url.Action("Delete", "Comment")', o, function (response) {
                    app.objects = response;
                    app.selectedObject = o;
                    app.hideModals();
                })
            },
            hideModals: function () {
                var app = this;
                app.detailsModal = false;
                app.editModal = false;
                app.newModal = false;
                app.deleteModal = false;
            }
        }
    });

</script>